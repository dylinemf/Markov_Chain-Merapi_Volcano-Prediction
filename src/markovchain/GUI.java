package markovchain;

/*
Anggota kelompok:
175314110 CLAUDHEA ZITA LEGINA
185314058 YOHANES DANI PRATAMA RAHADIANTO
185314114 AGUSTINA BUDI STEVANI
185314120 NOVIYAN IMAM ARIFIN
185314125 DYLINE MELYNEA FERNANDEZ

 */
import java.awt.Component;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Arrays;
import static javax.management.Query.lt;
import javax.swing.ButtonModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class GUI extends javax.swing.JFrame {

    File excelFile2;
    MarkovChain markov = new MarkovChain();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        addTableHeader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupStatus = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        labelJudul = new javax.swing.JLabel();
        import_data = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDataImpor = new javax.swing.JTable();
        labelMatriksProbTransisi = new javax.swing.JLabel();
        probTransisi = new javax.swing.JButton();
        labelStatusHariIni = new javax.swing.JLabel();
        labelRentangHari = new javax.swing.JLabel();
        fieldRentangHari = new javax.swing.JTextField();
        waspada = new javax.swing.JRadioButton();
        siaga = new javax.swing.JRadioButton();
        normal = new javax.swing.JRadioButton();
        labelPrediksi = new javax.swing.JLabel();
        labelWaspada = new javax.swing.JLabel();
        labelProbWaspada = new javax.swing.JLabel();
        labelSiaga = new javax.swing.JLabel();
        labelProbSiaga = new javax.swing.JLabel();
        labelNormal = new javax.swing.JLabel();
        labelProbNormal = new javax.swing.JLabel();
        buttonPrediksi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaMatriksProbTransisi = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelJudul.setText("Prediksi Status G.Merapi");

        import_data.setText("Impor data status");
        import_data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                import_dataActionPerformed(evt);
            }
        });

        tabelDataImpor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelDataImpor);

        labelMatriksProbTransisi.setText("Matriks Prob Transisi");

        probTransisi.setText("prob Transisi");
        probTransisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                probTransisiActionPerformed(evt);
            }
        });

        labelStatusHariIni.setText("Status hari ini");

        labelRentangHari.setText("Rentang hari");

        fieldRentangHari.setText("...");

        buttonGroupStatus.add(waspada);
        waspada.setText("waspada");
        waspada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waspadaActionPerformed(evt);
            }
        });

        buttonGroupStatus.add(siaga);
        siaga.setText("siaga");

        buttonGroupStatus.add(normal);
        normal.setText("normal");

        labelPrediksi.setText("Prediksi (prob) setelah rentang hari:");

        labelWaspada.setText("Waspada:");

        labelProbWaspada.setText("...");

        labelSiaga.setText("Siaga:");

        labelProbSiaga.setText("...");

        labelNormal.setText("Normal:");

        labelProbNormal.setText("...");

        buttonPrediksi.setText("Prediksi");
        buttonPrediksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrediksiActionPerformed(evt);
            }
        });

        textAreaMatriksProbTransisi.setColumns(20);
        textAreaMatriksProbTransisi.setRows(5);
        jScrollPane2.setViewportView(textAreaMatriksProbTransisi);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(import_data)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(probTransisi)
                                    .addComponent(labelMatriksProbTransisi))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelRentangHari)
                                        .addGap(18, 18, 18)
                                        .addComponent(fieldRentangHari, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelStatusHariIni)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(normal)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(siaga)
                                                    .addComponent(waspada))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(labelPrediksi)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(labelWaspada)
                                                            .addComponent(labelSiaga)
                                                            .addComponent(labelNormal))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(labelProbNormal)
                                                            .addComponent(labelProbSiaga)
                                                            .addComponent(labelProbWaspada)))))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addComponent(buttonPrediksi)))
                                .addGap(58, 58, 58))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(labelJudul)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(labelJudul)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(probTransisi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelMatriksProbTransisi)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 56, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addGap(172, 172, 172))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelStatusHariIni)
                                        .addComponent(waspada))
                                    .addGap(2, 2, 2)
                                    .addComponent(siaga)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(labelPrediksi)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelWaspada)
                                        .addComponent(labelProbWaspada))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelSiaga)
                                        .addComponent(labelProbSiaga))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelNormal)
                                        .addComponent(labelProbNormal))
                                    .addGap(14, 14, 14)))
                            .addComponent(normal)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelRentangHari)
                                .addComponent(fieldRentangHari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buttonPrediksi))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(import_data)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void waspadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waspadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waspadaActionPerformed

    private void probTransisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_probTransisiActionPerformed
        markov.readHari(excelFile2);
        markov.matriksTransisi();
        String txt = "";
        for (int i = 0; i < markov.matrixT.length; i++) {
            for (int j = 0; j < markov.matrixT[i].length; j++) {
                double roundOff = (double) Math.round(markov.matrixT[i][j] * 100) / 100;
                txt = txt + roundOff + "\t";

            }
            txt = txt + "\n";
        }
        textAreaMatriksProbTransisi.setText(txt);
    }//GEN-LAST:event_probTransisiActionPerformed

    private void import_dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_import_dataActionPerformed
        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportToJTable = null;
        String defaultCurrentDirectoryPath = "C:\\Users\\LENOVO\\Documents\\sem6\\stochastic\\proyek kelompok\\MarkovChain";
        JFileChooser excelFileChooser = new JFileChooser(defaultCurrentDirectoryPath);
        excelFileChooser.setDialogTitle("Select Excel File");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFile2 = excelFile;
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportToJTable = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportToJTable.getSheetAt(0);

                for (int row = 1; row <= excelSheet.getLastRowNum(); row++) {
                    XSSFRow excelRow = excelSheet.getRow(row);

                    XSSFCell excelHariKe = excelRow.getCell(0);
                    XSSFCell excelStatus = excelRow.getCell(1);
                    //                    XSSFCell excelProgrammingLanguage = excelRow.getCell(2);
                    //                    XSSFCell excelSubject = excelRow.getCell(3);
                    //                    XSSFCell excelImage = excelRow.getCell(4);

                    //                    JLabel excelJL = new JLabel(new ImageIcon(new ImageIcon(excelImage.getStringCellValue()).getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH)));
                    model.addRow(new Object[]{excelHariKe, excelStatus});
                }
                JOptionPane.showMessageDialog(null, "Berhasil diimpor !!.....");
            } catch (IOException iOException) {
                JOptionPane.showMessageDialog(null, iOException.getMessage());
            } finally {
                try {
                    if (excelFIS != null) {
                        excelFIS.close();
                    }
                    if (excelBIS != null) {
                        excelBIS.close();
                    }
                    if (excelImportToJTable != null) {
                        excelImportToJTable.close();
                    }
                } catch (IOException iOException) {
                    JOptionPane.showMessageDialog(null, iOException.getMessage());
                }
            }
        }
    }//GEN-LAST:event_import_dataActionPerformed

    private void buttonPrediksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrediksiActionPerformed
        waspada.setActionCommand("waspada");
        siaga.setActionCommand("siaga");
        normal.setActionCommand("normal");
        System.out.println("hahaha " + buttonGroupStatus.getSelection().getActionCommand());
        int n = Integer.parseInt(fieldRentangHari.getText());
        System.out.println("helow " + n);

        System.out.println(Arrays.deepToString(markov.matriksTransisi()));
    }//GEN-LAST:event_buttonPrediksiActionPerformed
    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
// &amp;lt;
    DefaultTableModel model;
//    byte imageJtable = new Byte(1024);

//Adding table headers
    public void addTableHeader() {
        model = (DefaultTableModel) tabelDataImpor.getModel();
        Object[] newIdentifiers = new Object[]{"Hari Ke", "Status"};
        model.setColumnIdentifiers(newIdentifiers);
        //Get Image column and override  TableCellRenderer class component method (getTableCellRendererComponent)
//        jTable1.getColumn("Image").setCellRenderer(new myTableCellRenderer());

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupStatus;
    private javax.swing.JButton buttonPrediksi;
    private javax.swing.JTextField fieldRentangHari;
    private javax.swing.JButton import_data;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelJudul;
    private javax.swing.JLabel labelMatriksProbTransisi;
    private javax.swing.JLabel labelNormal;
    private javax.swing.JLabel labelPrediksi;
    private javax.swing.JLabel labelProbNormal;
    private javax.swing.JLabel labelProbSiaga;
    private javax.swing.JLabel labelProbWaspada;
    private javax.swing.JLabel labelRentangHari;
    private javax.swing.JLabel labelSiaga;
    private javax.swing.JLabel labelStatusHariIni;
    private javax.swing.JLabel labelWaspada;
    private javax.swing.JRadioButton normal;
    private javax.swing.JButton probTransisi;
    private javax.swing.JRadioButton siaga;
    private javax.swing.JTable tabelDataImpor;
    private javax.swing.JTextArea textAreaMatriksProbTransisi;
    private javax.swing.JRadioButton waspada;
    // End of variables declaration//GEN-END:variables
}
